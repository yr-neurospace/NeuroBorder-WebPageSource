---
title: "Binomial distribution approximations"
author: "Rui Yang"
date: "2024-09-15"
date-modified: last-modified
categories: [binomial distribution, approximation]
format:
  html:
    toc: true
    toc-depth: 6
    toc-location: left
    fig-align: center
    number-depth: 6
    number-sections: true
    fig-cap-location: bottom
    fig-format: png
    lightbox: true
    tbl-cap-location: top
    page-layout: full

execute:
  warning: false

jupyter: julia-1.10
---

## Introduction

```{=html}
<object data="./pdfs/Binomial distribution approximations.pdf" type="application/pdf" width="100%" height="100%" style="min-width:100vh;min-height:100vh;">
  <p>It appears you don't have a PDF plugin for this browser. No biggie. You can click <a href="./pdfs/Binomial distribution approximations.pdf">here</a> to download the PDF file.</p>
</object>
```

## Normal approximation

```{julia}
using Random, Distributions, CairoMakie

Random.seed!(1234)

# the probability of success
ps = [0.1, 0.3, 0.5, 0.9]
# the number of experiments
ns = [10, 100, 1000]
layouts = [[1, 1], [1, 2], [2, 1], [2, 2]]
colors = [:blue, :green, :red]
normalDist = Normal(0, 1)
N = 10^6

fig = Figure(size=(1400, 1200))
for i in 1:length(ps)
    p = ps[i]
    ax = Axis(fig[layouts[i][1], layouts[i][2]])
    totalBins = []
    for j in 1:length(ns)
        n = ns[j]
        binomialDist = Binomial(n, p)
        samples = rand(binomialDist, N)
        # normal standardization
        normSamples = @. (samples - n * p) / sqrt(n * p * (1 - p))
        bins = sort(unique(normSamples))
        stephist!(ax, normSamples; color=colors[j], normalization=:pdf, bins=bins, label=string("n = ", n))
        totalBins = vcat(totalBins, bins)
    end
    xGrid = round(minimum(totalBins), RoundDown; digits=0):0.01:round(maximum(totalBins), RoundUp; digits=0)
    lines!(ax, xGrid, pdf.(normalDist, xGrid); color=:black, label="N(0, 1)")
    axislegend(ax)
    ax.xlabel = string("x\n(p = ", p, ")")
    ax.ylabel = "Density"
end
fig
```

## Poisson approximation

```{julia}
using Random, Distributions, CairoMakie

Random.seed!(1234)

lambda = 5
ns = [10, 20, 200]
N = 10^6
colors = [:red, :blue, :green]

fig = Figure()
ax = Axis(fig[1, 1]; xlabel="x", ylabel="Density")
poissonDist = Poisson(lambda)
samples = rand(poissonDist, N)
bins = sort(unique(samples))
stephist!(ax, samples; linewidth=3, linestyle=:dot, normalization=:pdf, bins=bins, color=:black, label="Î» = $(lambda)")
for i in 1:length(ns)
    p = lambda / ns[i]
    binomialDist = Binomial(ns[i], p)
    samples = rand(binomialDist, N)
    bins = sort(unique(samples))
    stephist!(ax, samples; normalization=:pdf, bins=bins, color=colors[i], label="n = $(ns[i]), p = $(p)")
end
axislegend(ax)
fig
```
