{
  "hash": "3bea499758df0b802a852675e1338379",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Misc R code\"\nauthor: \"Rui Yang\"\ndate: \"2025-01-02\"\ndate-modified: last-modified\ncategories: [r, misc]\nformat:\n  html:\n    toc: true\n    toc-depth: 6\n    toc-location: left\n    fig-align: center\n    number-depth: 6\n    number-sections: true\n    fig-cap-location: bottom\n    fig-format: png\n    lightbox: true\n    tbl-cap-location: top\n    page-layout: full\n\nexecute:\n  warning: false\n  eval: false\n---\n\n\n\n\n## Introduction\n\nUsed to collect various R code snippets.\n\n## Plot volcano plot in batch\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(vroom)\nlibrary(magrittr)\nlibrary(ggrepel)\nlibrary(ggprism)\nlibrary(YRUtils)\n\ninput_dir <- \"/home/yangrui/mywd/wutintin_transcriptome/input\"\noutput_dir <- \"/home/yangrui/mywd/wutintin_transcriptome/output\"\ntop_n <- 10\ngene_id_column <- \"gene_name\"\ndiff_flag_column <- \"diff_flag\"\nlogfc_column <- \"log2FoldChange\"\npadj_column <- \"padj\"\ncolor_column <- \"diff_flag\"\nlogfc_threshold <- 1\npadj_threshold <- 0.05\n# Up, Down, No\ndiff_flag_colors <- c(\"magenta4\", \"cyan4\", \"grey25\")\ngeom_point_alpha <- 0.5\ngeom_point_size <- 2\ngeom_line_linewidth <- 1\ngeom_line_color <- \"grey25\"\ngeom_line_linetype <- \"dashed\"\ngeom_text_alpha <- 1\nmin_segment_length <- 3\ngeom_text_size <- 5\ntheme_prism_panel_border <- TRUE\nfont_family <- \"Arial\"\ntheme_base_font_size <- 16\n\nfiles <- list.files(input_dir, pattern = \"\\\\.(tsv|txt|csv)$\", full.names = TRUE, recursive = FALSE)\nfor (file in files) {\n    data <- vroom(file) %>%\n        select(all_of(c(gene_id_column, diff_flag_column, logfc_column, padj_column))) %>%\n        set_colnames(c(\"gene_id\", \"diff_flag\", \"logFC\", \"padj\")) %>%\n        distinct()\n    anno_data <- data %>%\n        filter(diff_flag != \"NO\") %>%\n        group_by(diff_flag) %>%\n        slice_max(abs(logFC), n = top_n)\n\n    diff_flag_count_table <- count(data, diff_flag) %>%\n        arrange(diff_flag)\n    plot_title <- paste0(paste0(\n        diff_flag_count_table$diff_flag, \": \",\n        diff_flag_count_table$n\n    ), collapse = \"\\n\")\n\n    p <- ggplot(data, aes(logFC, -log10(padj), color = diff_flag)) +\n        geom_point(alpha = geom_point_alpha, size = geom_point_size) +\n        geom_vline(\n            xintercept = c(-logfc_threshold, logfc_threshold),\n            linewidth = geom_line_linewidth,\n            color = geom_line_color,\n            linetype = geom_line_linetype\n        ) +\n        geom_hline(\n            yintercept = -log10(padj_threshold),\n            linewidth = geom_line_linewidth,\n            color = geom_line_color,\n            linetype = geom_line_linetype\n        ) +\n        geom_label_repel(\n            data = anno_data,\n            mapping = aes(logFC, -log10(padj), color = diff_flag, label = gene_id),\n            max.overlaps = 10000, show.legend = FALSE, alpha = geom_text_alpha,\n            min.segment.length = min_segment_length, size = geom_text_size\n        ) +\n        labs(\n            title = plot_title,\n            x = \"logFC\", y = \"-log10(padj)\",\n            color = paste0(\"padj < \", padj_threshold, \"\\nlogFC > \", logfc_threshold)\n        ) +\n        theme_prism(border = theme_prism_panel_border, base_family = font_family, base_size = theme_base_font_size) +\n        theme(legend.title = element_text()) +\n        scale_color_manual(values = setNames(\n            diff_flag_colors,\n            c(paste0(strsplit(gsub(\"\\\\.(tsv|txt|csv)$\", \"\", basename(file)), \"_vs_\", fixed = TRUE)[[1]], \" Up\"), \"NO\")\n        ))\n\n    ppreview(p, file = file.path(output_dir, gsub(\"\\\\.(tsv|txt|csv)$\", \".pdf\", basename(file))))\n}\n```\n:::\n\n\n\n\n## Visualize scRNA-Seq expression of a single gene using dot plot and violin plot of Seurat\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(Seurat)\nlibrary(tidyverse)\nlibrary(YRUtils)\n\nrna_rds_file <- \"/data/users/yangrui/sc_omics_ref_datasets/human/dataset_2/ana/res/rna_to_umap.rds\"\noutput_dir <- \"/home/yangrui/temp\"\ntarget_gene_names <- \"BTN3A2\"\ntarget_cell_types <- c(\"Exc. GluN1\" = \"GluN1\", \"Exc. GluN2\" = \"GluN2\", \"Exc. GluN3\" = \"GluN3\", \"Exc. GluN4\" = \"GluN4\", \"Exc. GluN5\" = \"GluN5\", \"Exc. GluN6\" = \"GluN6\", \"Exc. GluN7\" = \"GluN7\", \"Exc. GluN8\" = \"GluN8\", \"CGE IN \" = \"CGE IN\", \"MGE IN \" = \"MGE IN\", \"Oligo\" = \"OPC/Oligo\", \"MG\" = \"MG\")\n\nrna <- readRDS(rna_rds_file)\necho_vec(sort(unique(rna[[]]$Name)))\n\n# dot plot\np <- DotPlot(rna, features = target_gene_names, idents = target_cell_types) +\n    RotatedAxis() +\n    scale_y_discrete(\n        limits = rev(target_cell_types),\n        labels = rev(names(target_cell_types))\n    ) +\n    labs(x = NULL, y = NULL) +\n    theme(text = element_text(family = \"Arial\"))\n\nppreview(p, file = file.path(output_dir, \"dotplot.pdf\"))\n\n# violin plot\nident_colors <- scales::hue_pal()(length(target_cell_types))\n\np <- VlnPlot(rna, features = target_gene_names, idents = target_cell_types, pt.size = 0, cols = ident_colors)\np <- p + geom_jitter(mapping = aes(color = ident), data = p$data, size = 1) +\n    scale_x_discrete(\n        limits = target_cell_types,\n        labels = names(target_cell_types)\n    ) +\n    scale_y_continuous(\n        expand = expansion(0),\n        limits = c(0, ceiling(max(p$data[[target_gene_names]])))\n    ) +\n    labs(x = NULL, y = NULL, color = \"Cell Type\") +\n    guides(fill = \"none\") +\n    theme(text = element_text(family = \"Arial\"))\n\nppreview(p, file = file.path(output_dir, \"violinplot.pdf\"))\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}