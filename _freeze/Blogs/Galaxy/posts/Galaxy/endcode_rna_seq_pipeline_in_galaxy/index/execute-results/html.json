{
  "hash": "bc6024fb45531c3ba579a8efcd1d142a",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"How to run ENCODE bulk RNA-seq pipeline in NeuroBorder Galaxy\"\nauthor: \"Rui Yang\"\ndate: \"2024-11-20\"\ndate-modified: last-modified\ncategories: [encode, bulk rna-seq, galaxy]\nformat:\n  html:\n    toc: true\n    toc-depth: 6\n    toc-location: left\n    fig-align: center\n    number-depth: 6\n    number-sections: true\n    fig-cap-location: bottom\n    fig-format: png\n    lightbox: true\n    tbl-cap-location: top\n    page-layout: full\n\nexecute:\n  warning: false\n  eval: false\n---\n\n\n\n\n## Introduction\n\nNeuroBorder Galaxy platform is only responsible for performing analyses, not for visualizing results, which can be done by using [NeuroBorder Shiny App](https://github.com/yr-neurospace/NeuroBorder-ShinyWebApp) in part. For some of results, you can visualize them via R, Python, GraphPad Prism, etc. yourself.\n\n## Steps\n\n### Check MD5 sums of your raw FASTQ data in your computer\n\nFor Windows users, I recommend using [git for windows](https://gitforwindows.org), which provides `md5sum` program equivalent to the Linux one. For Linux and Mac users, `md5sum` program has already been built into the system.\n\nOnce you have installed it, you can right-click the mouse on your target directory and choose `Open Git Bash here`. This will open Git Bash terminal and set your target directory as the current working directory. Then you can use `ls` or `cd <target directory>` command to list files/directories in the current working directory or change the current working directory to your specified target directory. Change your current working directory using `cd` into the directory containing MD5 file such as `md5.txt` or `MD5.txt`, and then run the following code:\n\n\n\n\n```{bash}\nmd5sum -c md5.txt > md5_check.txt\n```\n\n\n\n\nNow, once the program has been run successfully, you can view the file `md5_check.txt` to see whether all files are correct.\n\n### Copy your raw FASTQ data to a new directory and rename them\n\nWithin your Git Bash, running the following code in the directory containing your raw FASTQ data needed to be analyzed:\n\n\n\n\n```{bash}\nfind <raw data directory> -type f | grep -P \".+\\.(fastq|fq)\\.gz$\" | xargs -I {} realpath {} | xargs -I {} cp {} <target directory>\n```\n\n\n\n\nIn the above code, you should replace `<raw data directory>` with your directory containing your raw FASTQ data needed to be analyzed (you can use `.` to denote the current working directory), and replace `<target directory>` with your new directory into which all raw FASTQ data will be copied.\n\nAfter this step, rename your raw FASTQ files with the following specifications (**This is absolutely necessary!**):\n\n**Note: input FASTQ file names must strictly adhere to the following rules otherwise you will get unexpected outputs!**\n\n- Single-end: `ID_repN[_partN].(fastq|fq).gz`\n\n- Paired-end: `ID_repN[_partN].R(1|2).(fastq|fq).gz`\n\nAmong them:\n\n- `ID` is the sample name, which can only contain `[a-zA-Z0-9]` and does **NOT** start with `[0-9]`.\n\n- `repN` means the `N`th biological replicate.\n\n- `partN` means the `N`th technical replicate. All technical replicates with the same `ID_repN` \nshould be merged into a single FASTQ file before running downstream analyses. This will be done \nby ENCODE bulk RNA-seq pipeline before performing alignment and quantification.\n\n- `N` can only contain `[0-9]`.\n\n**Note: Even though you have only one biological replicate, `rep1` CANNOT be omitted. If you have only one technical replicate, `part1` CAN be omitted.**\n\ne.g.\n\nFor paired-end samples: `Brain1_rep1.fastq.R1.gz`, `Brain1_rep1.fastq.R2.gz`, `Brain1_rep2_part1.R1.fq.gz`, `Brain1_rep2_part2.R1.fastq.gz`, `Brain1_rep2_part1.R2.fq.gz`, `Brain1_rep2_part2.R2.fastq.gz`.\n\nFor single-end samples: `Cortex_rep1.fq.gz`, `Cortex_rep2_part1.fq.gz`, `Cortex_rep2_part2.fastq.gz`.\n\nOnce renaming is done, generate MD5 sums again for your newly renamed raw FASTQ files by running the following code in the directory containing your newly renamed FASTQ files:\n\n\n\n\n```{bash}\nmd5sum.exe *.fastq.gz > md5.txt\n```\n\n\n\n\nThis will generate all MD5 sums of your newly renamed FASTQ files in file `md5.txt`.\n\n### Upload your raw FASTQ files and MD5 sums file to NeuroBorder Galaxy\n\nAt present, the IP address of NeuroBorder Galaxy is an internal IP address `http://172.16.50.95`. This means that you cannot visit it outside. In addition, this IP is not permanent, which means it may be changed in the future. If you find it is invalid, please let me know. I will update it as I can.\n\nOnce you have typed the IP address into your browser, you can upload data and perform various analyses within NeuroBorder Galaxy.\n\nFor how to use some basic functionalities of NeuroBorder Galaxy, such as uploading data, managing history, etc., you can learn them from [the Galaxy Training](https://training.galaxyproject.org) or I can give you some demos in real time if necessary.\n\nAt present, all tools used for ENCODE RNA-seq pipeline is under `Tools` $\\to$ `NeuroBorder Tools`, in which you can choose the concrete tool for your purpose.\n\nOnce you have uploaded your raw FASTQ files and MD5 sums file to NeuroBorder Galaxy, they will be shown in the right `History` panel (You can give each of your histories a meaningful name and delete them when you don't need them anymore. This is a good behavior for saving storage resource when available storage resource is inadequate.). Next, you should build your **raw FASTQ files** (note: not including the MD5 sums file) into a dataset list and give it a meaningful name.\n\nBy now, you can run each of the following step one by one.\n\n### Run `MD5SUM`\n\nThis step ensures that your raw FASTQ files are not malformed during uploading.\n\nIn this step, you can check or generate (if `MD5 file` is not provided) MD5 sums of your files.\n\n### Run `FASTQC/MULTIQC` over raw FASTQ files\n\nGenerate quality reports for your raw FASTQ files.\n\n### Run `Trim Galore`\n\nThis step performs quality, adapter, and Ns trimmings of your sequencing reads, discard reads too short, and ensure that you only use sequencing reads with high quality for downstream analyses.\n\n### Run `FASTQC/MULTIQC` over trimmed FASTQ files\n\nGenerate quality reports for your trimmed FASTQ files.\n\n### Run `ENCODE Bulk RNA-seq Pipeline`\n\nThis step will run the ENCODE Bulk RNA-seq Pipeline and may take a long time from hours to days depending on your sample sizes.\n\n**Please make sure you have selected the right species (e.g. `mm10` if your data is obtained from mouse) for your data.**\n\nThis step will generate some extremely large files, so you should download them with care. Once all files have been downloaded and unzipped, some files of them need to be uploaded again for performing downstream analyses. These files are mainly quantification files (with suffix such as `_anno_rsem.genes.results` or `_anno_rsem.isoforms.results`) generated by RSEM.\n\nAs mentioned before, all uploaded files still need to be built into a dataset list with a name when feeded into the next tool.\n\n### Run `Extract RSEM Results`\n\nThis step will extract some expression metrics and store them into some files from RSEM results.\n\n### Run `Bulk RNA-seq DE with DESeq2`\n\nThis step will perform differential expression analysis over all comparison pairs.\n\n### Run `GO Enrichment Analysis`\n\nThis step performs GO enrichment analysis over one or more gene sets.\n\n### Run `GSEA Analysis`\n\nThis step performs GSEA analysis.\n\n### Epilogue\n\nTo date, you have run all basic steps of bulk RNA-seq analysis. You can turn to visualize them or perform more adavnced analysis yourself.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}